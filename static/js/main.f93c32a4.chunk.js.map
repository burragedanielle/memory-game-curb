{"version":3,"sources":["components/gameCards.jsx","components/gameCardContainer.jsx","components/scorebar.jsx","components/jumbotron.jsx","components/gameBoard.jsx","App.js","index.js"],"names":["GameCard","props","className","onClick","handleClick","id","src","img","alt","value","GameCardContainer","imageArray","map","gameCard","key","ScoreBar","Fragment","currentScore","highScore","Jumbotron","Component","GameBoard","state","images","selectedList","cardId","console","log","includes","alert","setState","shuffle","push","imageArrayTemp","i","length","j","Math","floor","random","temp","this","App","ReactDOM","render","document","getElementById"],"mappings":"0zBAgBeA,MAdf,SAAkBC,GACd,OACI,6BACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cACX,yBAAKC,QAAS,kBAAMF,EAAMG,YAAYH,EAAMI,KAAKC,IAAKL,EAAMM,IAAKC,IAAKP,EAAMQ,MAAOA,MAAOR,EAAMQ,MAAOJ,GAAIJ,EAAMI,UCa1HK,MAlBf,SAA2BT,GACvB,OACI,6BACI,yBAAKC,UAAU,OACVD,EAAMU,WAAWC,KAAI,SAAAC,GAAQ,OAC1B,kBAAC,EAAD,CACIC,IAAKD,EAASR,GACdI,MAAOI,EAASJ,MAChBF,IAAKM,EAASN,IACdF,GAAIQ,EAASR,GACbD,YAAaH,EAAMG,oB,OCI5BW,MAff,SAAkBd,GACd,OACI,kBAAC,IAAMe,SAAP,KACI,6BACI,yBAAKd,UAAU,eACX,wBAAIG,GAAG,aAAaH,UAAU,wBAC1B,4BAAI,0BAAMA,UAAU,cAAhB,kBAAJ,IAAwDD,EAAMgB,cAC9D,4BAAI,0BAAMf,UAAU,cAAhB,cAAJ,IAAoDD,EAAMiB,gBCUnEC,E,iLAhBP,OACI,6BACI,yBAAKjB,UAAU,kBAAkBG,GAAG,aAChC,yBAAKH,UAAU,gBACX,yBAAKA,UAAU,gBACX,oDACA,2CACA,uBAAGA,UAAU,eAAb,0G,GATJkB,aCkETC,E,2MA5DXC,MAAQ,CACJX,WAAYY,EACZC,aAAc,GACdP,aAAc,EACdC,UAAW,G,EAGfd,YAAc,SAAAqB,GAGV,GAFAC,QAAQC,IAAR,8BAAmCF,IAE/B,EAAKH,MAAME,aAAaI,SAASH,GACjCI,MAAM,gBACN,EAAKC,SACD,CACInB,WAAY,EAAKoB,UACjBP,aAAc,GACdP,aAAc,QAGnB,CACH,IAAMO,EAAY,YAAO,EAAKF,MAAME,cACpCA,EAAaQ,KAAKP,GAClB,EAAKK,SACD,CACIN,eACAb,WAAY,EAAKoB,UACjBd,aAAc,EAAKK,MAAML,aAAe,IAI5C,EAAKK,MAAML,cAAgB,EAAKK,MAAMJ,WACtC,EAAKY,SAAS,CAAEZ,UAAW,EAAKI,MAAML,aAAe,M,yEAO7D,IADA,IAAIgB,EAAc,YAAOV,GAChBW,EAAID,EAAeE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAChD,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAeC,GAC1BD,EAAeC,GAAKD,EAAeG,GACnCH,EAAeG,GAAKI,EAExB,OAAOP,I,+BAIP,OACI,6BACI,kBAAC,EAAD,CAAUf,UAAWuB,KAAKnB,MAAMJ,UAAWD,aAAcwB,KAAKnB,MAAML,eACpE,kBAAC,EAAD,MACA,yBAAKf,UAAU,aACX,kBAAC,EAAD,CAAmBS,WAAY8B,KAAKnB,MAAMX,WAAYP,YAAaqC,KAAKrC,oB,GAtDpEgB,aCMTsB,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCDNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f93c32a4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction GameCard(props) {\n    return (\n        <div>\n            <div className=\"col s4\">\n                <div className=\"card hoverable\">\n                    <div className=\"card-image\">\n                        <img onClick={() => props.handleClick(props.id)} src={props.img} alt={props.value} value={props.value} id={props.id} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GameCard;\n","import React from 'react';\nimport GameCard from './gameCards';\n\nfunction GameCardContainer(props) {\n    return (\n        <div>\n            <div className=\"row\">\n                {props.imageArray.map(gameCard =>\n                    <GameCard\n                        key={gameCard.id}\n                        value={gameCard.value}\n                        img={gameCard.img}\n                        id={gameCard.id}\n                        handleClick={props.handleClick}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default GameCardContainer;","import React from 'react';\n\nfunction ScoreBar(props) {\n    return (\n        <React.Fragment>\n            <nav>\n                <div className=\"nav-wrapper\">\n                    <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\n                        <li><span className=\"scoretitle\">Current Score:</span> {props.currentScore}</li>\n                        <li><span className=\"scoretitle\">Top Score:</span> {props.highScore}</li>\n                    </ul>\n                </div>\n            </nav>\n        </React.Fragment>\n    );\n};\n\nexport default ScoreBar;","import React, { Component } from 'react';\nclass Jumbotron extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"card horizontal\" id=\"jumbotron\">\n                    <div className=\"card-stacked\">\n                        <div className=\"card-content\">\n                            <h3>curb your enthusiasm</h3>\n                            <h1>Memory Game</h1>\n                            <p className=\"description\">Test your memory! See how many images of Larry David you can click without repeating yourself.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Jumbotron;","import React, { Component } from 'react';\nimport GameCardContainer from './gameCardContainer';\nimport images from './images.json';\nimport ScoreBar from './scorebar';\nimport Jumbotron from './jumbotron';\n\nclass GameBoard extends Component {\n    state = {\n        imageArray: images,\n        selectedList: [],\n        currentScore: 0,\n        highScore: 0\n    }\n\n    handleClick = cardId => {\n        console.log(`I've beeen clicked! ${cardId}`);\n\n        if (this.state.selectedList.includes(cardId)) {\n            alert('Start again!');\n            this.setState(\n                {\n                    imageArray: this.shuffle(),\n                    selectedList: [],\n                    currentScore: 0\n                }\n            );\n        } else {\n            const selectedList = [...this.state.selectedList];\n            selectedList.push(cardId);\n            this.setState(\n                {\n                    selectedList,\n                    imageArray: this.shuffle(),\n                    currentScore: this.state.currentScore + 1,\n                }\n            );\n\n            if (this.state.currentScore >= this.state.highScore) {\n                this.setState({ highScore: this.state.currentScore + 1 });\n            }\n        };\n    }\n\n    shuffle() {\n        let imageArrayTemp = [...images];\n        for (let i = imageArrayTemp.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            let temp = imageArrayTemp[i];\n            imageArrayTemp[i] = imageArrayTemp[j];\n            imageArrayTemp[j] = temp;\n        }\n        return imageArrayTemp;\n    }\n\n    render() {\n        return (\n            <div>\n                <ScoreBar highScore={this.state.highScore} currentScore={this.state.currentScore} />\n                <Jumbotron />\n                <div className=\"container\">\n                    <GameCardContainer imageArray={this.state.imageArray} handleClick={this.handleClick} />\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default GameBoard;","import React from 'react';\nimport './App.css';\nimport GameBoard from './components/gameBoard';\n\nfunction App() {\n  return (\n    <div>\n      <GameBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}